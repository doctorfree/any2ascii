#!/bin/bash
#
# build - compile and optionally install any2ascii
#

build_jp2a() {
  #
  # Repo: https://github.com/doctorfree/Asciiville
  #
  # Fork of Repo: https://github.com/cslarsen/jp2a
  #
  [ -f src/jp2a ] || {
    prefix="--prefix=/usr"
    [ "${PREFIX}" ] && prefix="--prefix=${PREFIX}"
    autoreconf -vi
    ./configure ${prefix} --enable-curl --enable-termlib
    make -j
  }

  chmod +x src/jp2a

  [ "${INSTALL}" ] && sudo PREFIX=${PREFIX} make install
}

usage() {
    printf "\nUsage: ./build [-i] [-p prefix] [-u]"
    printf "\nWhere:"
    printf "\n\t-i indicates install"
    printf "\n\t-p prefix specifies installation prefix (default /usr)"
    printf "\n\t-u displays this usage message and exits\n"
    exit 1
}

INSTALL=
platform=`uname -s`
if [ "${platform}" == "Darwin" ]
then
  PREFIX="/usr/local"
else
  PREFIX="/usr"
fi
while getopts "ip:u" flag; do
    case $flag in
        i)
            INSTALL=1
            ;;
        p)
            PREFIX="$OPTARG"
            ;;
        u)
            usage
            ;;
    esac
done
shift $(( OPTIND - 1 ))

arch=
centos=
debian=
fedora=
darwin=

if [ "${platform}" == "Darwin" ]
then
  darwin=1
  brew install jpeg
  brew install libpng
  brew install pkg-config
else
  [ -f /etc/os-release ] && . /etc/os-release
  [ "${ID_LIKE}" == "debian" ] && debian=1
  [ "${ID}" == "arch" ] && arch=1
  [ "${ID}" == "centos" ] && centos=1
  [ "${ID}" == "fedora" ] && fedora=1
  [ "${debian}" ] || [ -f /etc/debian_version ] && debian=1

  if [ "${debian}" ]
  then
    PKGS="build-essential autotools-dev autoconf libtool \
          tar zstd make g++ libjpeg62-turbo-dev libpng-dev \
          gcc-10 g++-10 cpp-10"
    if [ "$1" == "-r" ]
    then
      sudo apt remove ${PKGS}
    else
      sudo apt install ${PKGS} pandoc zip
      sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 \
          --slave /usr/bin/g++ g++ /usr/bin/g++-10 \
          --slave /usr/bin/gcov gcov /usr/bin/gcov-10
    fi
  else
    if [ "${arch}" ]
    then
      PKGS="base-devel"
      if [ "$1" == "-r" ]
      then
        sudo pacman -Rs ${PKGS}
      else
        sudo pacman -S --needed ${PKGS} pandoc zip
      fi
    else
      have_dnf=`type -p dnf`
      if [ "${have_dnf}" ]
      then
        PINS=dnf
      else
        PINS=yum
      fi
      sudo ${PINS} makecache
      if [ "${fedora}" ]
      then
        PKGS="libtool automake libjpeg-turbo-devel libpng-devel"
        if [ "$1" == "-r" ]
        then
          sudo ${PINS} -y remove ${PKGS}
          sudo ${PINS} -y remove gcc-c++
          sudo ${PINS} -y groupremove "Development Tools" "Development Libraries"
        else
          sudo ${PINS} -y groupinstall "Development Tools" "Development Libraries"
          sudo ${PINS} -y install gcc-c++
          sudo ${PINS} -y install ${PKGS} pandoc zip
        fi
      else
        if [ "${centos}" ]
        then
          sudo alternatives --set python /usr/bin/python3
          PKGS="libtool automake libjpeg-turbo-devel libpng-devel"
          if [ "$1" == "-r" ]
          then
            sudo ${PINS} -y remove ${PKGS}
            sudo ${PINS} -y remove gcc-c++
            sudo ${PINS} -y groupremove "Development Tools"
          else
            sudo ${PINS} -y groupinstall "Development Tools"
            sudo ${PINS} -y install gcc-c++
            sudo ${PINS} -y install ${PKGS} pandoc zip
          fi
        else
          if [ "${darwin}" ]
          then
            echo "Install Mac dev env"
          else
            echo "Unrecognized operating system"
          fi
        fi
      fi
    fi
  fi
fi

build_jp2a
